services:
  # 共享服务
  redis:
    image: redis:7-alpine
    container_name: ntn-redis
    restart: unless-stopped
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-ntn_redis_2024}
    command: redis-server --requirepass ${REDIS_PASSWORD:-ntn_redis_2024}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ntn_network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # 模组01: API统一管理工厂
  api_forge:
    build:
      context: ./01APIForge
      dockerfile: Dockerfile
    container_name: ntn-api-forge
    restart: unless-stopped
    environment:
      - APP_ENV=production
      - REDIS_HOST=redis
      - REDIS_PASSWORD=${REDIS_PASSWORD:-ntn_redis_2024}
      - ZMQ_PUBLISHER_PORT=5555
      - ZMQ_SUBSCRIBER_PORT=5556
    ports:
      - "8000:8000"
      - "5555:5555"
      - "5556:5556"
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./01APIForge/data:/app/data
      - ./01APIForge/logs:/app/logs
    networks:
      - ntn_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # 模组02: 信息源爬虫
  data_spider:
    build:
      context: ./02DataSpider
      dockerfile: Dockerfile
      target: production
    container_name: ntn-data-spider
    restart: unless-stopped
    environment:
      - APP_ENV=production
      - NTN_ENV=production
      - REDIS_HOST=redis
      - REDIS_PASSWORD=${REDIS_PASSWORD:-ntn_redis_2024}
      - ZMQ_PUBLISHER_PORT=5555
      - ZMQ_SUBSCRIBER_PORT=5556
    ports:
      - "5000:5000"
      - "5557:5555"
      - "5558:5556"
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./02DataSpider/data:/app/data
      - ./02DataSpider/logs:/app/logs
    networks:
      - ntn_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # 模组03: 扫描器
  scan_pulse:
    build:
      context: ./03ScanPulse
      dockerfile: Dockerfile
      target: runtime
    dns:
      - 8.8.8.8
      - 1.1.1.1
    container_name: ntn-scan-pulse
    restart: unless-stopped
    environment:
      - APP_ENV=production
      - REDIS_HOST=redis
      - REDIS_PASSWORD=${REDIS_PASSWORD:-ntn_redis_2024}
    ports:
      - "8001:8000"
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./03ScanPulse/data:/app/data
      - ./03ScanPulse/logs:/app/logs
    networks:
      - ntn_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  ntn_network:
    driver: bridge

volumes:
  redis_data:
    driver: local